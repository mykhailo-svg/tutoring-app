version: '3.8'

services:
  nest-backend:
    container_name: nest-app
    image: nest-api
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - 5000:5000
    networks:
      - backend_network
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    command: yarn start:dev
    depends_on:
      - postgres
      - postgres-testing
      - tutoring-app-redis-service

  postgres:
    container_name: postgres-db
    image: postgres:12
    expose:
      - '5435'
    ports:
      - 5435:5435
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - backend_network
    restart: unless-stopped
    command: -p 5435
    volumes:
      - postgres_data:/var/lib/postgresql/data

  postgres-testing:
    container_name: postgres-db-testing
    image: postgres:12
    expose:
      - '5437'
    ports:
      - 5437:5437
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - backend_network
    restart: unless-stopped
    command: -p 5437

  tutoring-app-redis-service:
    container_name: tutoring-app-redis-service
    image: redis:latest
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      interval: 1s
      timeout: 3s
      retries: 5
    networks:
      - backend_network
    command: ['redis-server']

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - backend_network
    ports:
      - '5050:80'
    depends_on:
      - postgres
      - postgres-testing

networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data: {}
